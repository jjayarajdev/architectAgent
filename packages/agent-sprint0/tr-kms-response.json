{"repository":{"url":"https://github.com/jjayarajdev/tr-kms-prod-app.git","branch":"main"},"changeRequest":"Migrate vector database from ChromaDB to Qdrant for ServiceNow RAG system","context":{},"repoAnalysis":{"repository":"https://github.com/jjayarajdev/tr-kms-prod-app.git","architecture":{"stack":[],"patterns":[],"structure":"unknown"},"database":{"type":"unknown","tables":[],"relationships":[]},"codeMetrics":{"files":281,"languages":{".md":32,".py":138,".j2":7,".yaml":1,".bak":1,".bin":8,".txt":2,".csv":14,".json":16,".sh":16,".pkl":1,".js":4,".html":1,".svg":2,".css":2,".tsx":31,".ts":4,".mjs":1},"testCoverage":"unknown"},"dependencies":{},"apis":{"endpoints":["type","sub","/search","success","response","metadata","agent_trace","rbac_applied","/teams","/test-rbac","results","/clarify","enhanced_query","/login","/login/json","/refresh","/logout","/me","/password-reset-request","/password-reset"],"authentication":"OAuth"},"fileSystem":{"files":["kms-msoffice/ops-msoffice/app/core/config.py","kms-msoffice/ops-msoffice/app/core/security.py","kms-msoffice/ops-msoffice/app/core/__init__.py","kms-msoffice/ops-msoffice/app/core/performance_optimizer.py","kms-msoffice/ops-msoffice/app/core/dependencies.py","kms-msoffice/ops-msoffice/app/__init__.py","kms-msoffice/ops-msoffice/app/agents/enhanced_supervisor.py","kms-msoffice/ops-msoffice/app/agents/agent_registry.py","kms-msoffice/ops-msoffice/app/agents/quick_search_agent.py","kms-msoffice/ops-msoffice/app/agents/productivity_reporter.py","kms-msoffice/ops-msoffice/app/agents/task_mining_service.py","kms-msoffice/ops-msoffice/app/agents/query_clarifier.py","kms-msoffice/ops-msoffice/app/agents/email_topic_summarizer.py","kms-msoffice/ops-msoffice/app/agents/base_agent.py","kms-msoffice/ops-msoffice/app/agents/document_drafter.py","kms-msoffice/ops-msoffice/app/agents/meeting_analyzer.py","kms-msoffice/ops-msoffice/app/agents/__init__.py","kms-msoffice/ops-msoffice/app/agents/supervisor_base.py","kms-msoffice/ops-msoffice/app/agents/orchestrator.py","kms-msoffice/ops-msoffice/app/agents/email_action_extractor.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/context_manager.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/quick_search_agent.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/supervisor.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/query_clarifier.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/llm_intent_classifier.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/intent_classifier.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/supervisor_enhanced.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/entity_extractor.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/query_clarifier_enhanced.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/enhanced_context_manager.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/llm_context_enhancer.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/feedback_learning_system.py","kms-msoffice/ops-msoffice/app/agents/deprecated_backup/adaptive_confidence_manager.py","kms-msoffice/ops-msoffice/app/agents/calendar_manager.py","kms-msoffice/ops-msoffice/app/agents/teams_collaboration_agent.py","kms-msoffice/ops-msoffice/app/models/user.py","kms-msoffice/ops-msoffice/app/models/conversation.py","kms-msoffice/ops-msoffice/app/models/search_log.py","kms-msoffice/ops-msoffice/app/models/__init__.py","kms-msoffice/ops-msoffice/app/models/team.py","kms-msoffice/ops-msoffice/app/models/sharepoint.py","kms-msoffice/ops-msoffice/app/models/document.py","kms-msoffice/ops-msoffice/app/models/meeting.py","kms-msoffice/ops-msoffice/app/models/vectorization_job.py","kms-msoffice/ops-msoffice/app/schemas/user.py","kms-msoffice/ops-msoffice/app/schemas/token.py","kms-msoffice/ops-msoffice/app/schemas/__init__.py","kms-msoffice/ops-msoffice/app/integrations/__init__.py","kms-msoffice/ops-msoffice/app/crud/conversation.py","kms-msoffice/ops-msoffice/app/crud/__init__.py","kms-msoffice/ops-msoffice/app/crud/crud_user.py","kms-msoffice/ops-msoffice/app/crud/base.py","kms-msoffice/ops-msoffice/app/prompts/prompt_manager.py","kms-msoffice/ops-msoffice/app/prompts/agents/supervisor/intent_classification.yaml","kms-msoffice/ops-msoffice/app/db/base_class.py","kms-msoffice/ops-msoffice/app/db/session.py","kms-msoffice/ops-msoffice/app/db/add_trending_fields.py","kms-msoffice/ops-msoffice/app/db/__init__.py","kms-msoffice/ops-msoffice/app/db/populate_trending_data.py","kms-msoffice/ops-msoffice/app/api/deps.py","kms-msoffice/ops-msoffice/app/api/endpoints/auth.py","kms-msoffice/ops-msoffice/app/api/endpoints/agentic_search.py","kms-msoffice/ops-msoffice/app/api/endpoints/vectorization.py","kms-msoffice/ops-msoffice/app/api/endpoints/enhanced_agentic_search.py","kms-msoffice/ops-msoffice/app/api/endpoints/users.py","kms-msoffice/ops-msoffice/app/api/endpoints/trending.py","kms-msoffice/ops-msoffice/app/api/endpoints/meetings.py","kms-msoffice/ops-msoffice/app/api/endpoints/documents.py","kms-msoffice/ops-msoffice/app/api/endpoints/emails.py","kms-msoffice/ops-msoffice/app/api/endpoints/teams.py","kms-msoffice/ops-msoffice/app/api/endpoints/__init__.py","kms-msoffice/ops-msoffice/app/api/endpoints/conversations_simple.py","kms-msoffice/ops-msoffice/app/api/endpoints/rag.py","kms-msoffice/ops-msoffice/app/api/endpoints/sharepoint.py","kms-msoffice/ops-msoffice/app/api/endpoints/search.py","kms-msoffice/ops-msoffice/app/api/endpoints/conversations_fix.py","kms-msoffice/ops-msoffice/app/api/endpoints/conversations.py","kms-msoffice/ops-msoffice/app/api/endpoints/enhanced_search.py","kms-msoffice/ops-msoffice/app/api/__init__.py","kms-msoffice/ops-msoffice/app/main.py","kms-msoffice/ops-msoffice/app/services/sharepoint_service.py","kms-msoffice/ops-msoffice/app/services/rag_service.py","kms-msoffice/ops-msoffice/app/services/chromadb_service.py","kms-msoffice/ops-msoffice/app/services/document_processor.py","kms-msoffice/ops-msoffice/app/services/graph_api_service.py","kms-msoffice/ops-msoffice/app/services/graph_service.py","kms-msoffice/ops-msoffice/app/services/llm_search_service.py","kms-msoffice/ops-msoffice/app/services/__init__.py","kms-msoffice/ops-msoffice/tests/historical_results/real_world_test_results_20250822_115810.json","kms-msoffice/ops-msoffice/tests/performance_tests/benchmark_agents.py","kms-msoffice/ops-msoffice/tests/unit_tests/quick_test_sample.py","kms-msoffice/ops-msoffice/tests/unit_tests/debug_meeting_dates.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_routing_debug.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_simple_query.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_no_mock_data.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_meeting_date_fix.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_minimal_debug.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_decisive_fix.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_migration_validation.py","kms-msoffice/ops-msoffice/tests/unit_tests/test_work_summarizer_fixes.py"],"directories":["/tmp/repo-analysis","kms-msoffice","kms-msoffice/ops-msoffice","kms-msoffice/ops-msoffice/app","kms-msoffice/ops-msoffice/app/core","kms-msoffice/ops-msoffice/app/agents","kms-msoffice/ops-msoffice/app/agents/deprecated_backup","kms-msoffice/ops-msoffice/app/models","kms-msoffice/ops-msoffice/app/schemas","kms-msoffice/ops-msoffice/app/integrations","kms-msoffice/ops-msoffice/app/crud","kms-msoffice/ops-msoffice/app/prompts","kms-msoffice/ops-msoffice/app/prompts/agents","kms-msoffice/ops-msoffice/app/prompts/agents/clarification","kms-msoffice/ops-msoffice/app/prompts/agents/meeting","kms-msoffice/ops-msoffice/app/prompts/agents/email","kms-msoffice/ops-msoffice/app/prompts/agents/supervisor","kms-msoffice/ops-msoffice/app/prompts/templates","kms-msoffice/ops-msoffice/app/db","kms-msoffice/ops-msoffice/app/api","kms-msoffice/ops-msoffice/app/api/endpoints","kms-msoffice/ops-msoffice/app/services","kms-msoffice/ops-msoffice/tests","kms-msoffice/ops-msoffice/tests/historical_results","kms-msoffice/ops-msoffice/tests/documentation","kms-msoffice/ops-msoffice/tests/performance_tests","kms-msoffice/ops-msoffice/tests/unit_tests","kms-msoffice/ops-msoffice/tests/integration_tests","kms-msoffice/ops-msoffice/tests/test_data","kms-msoffice/ops-msoffice/tests/scripts","kms-msoffice/ops-msoffice/tests/test_results","kms-msoffice/ops-msoffice/docs","kms-msoffice/ops-msoffice/docs/testing","kms-msoffice/ops-msoffice/scripts","kms-msoffice/ops-msoffice/alembic","kms-msoffice/ops-msoffice/alembic/versions","kms-msoffice/ops-msoffice/data","kms-msoffice/ops-msoffice/data/chromadb","kms-msoffice/ops-msoffice/data/chromadb/trChromaDB_backup","kms-msoffice/ops-msoffice/data/chromadb/trChromaDB_backup/dcc3cf59-3826-4ebd-a037-549f537936a4","kms-msoffice/ops-msoffice/data/chromadb/trChromaDB","kms-msoffice/ops-msoffice/data/chromadb/trChromaDB/893cf4c0-9b09-4f00-9e73-005ee2eeea17","kms-msoffice/ui-msoffice","kms-msoffice/ui-msoffice/public","kms-msoffice/ui-msoffice/src","kms-msoffice/ui-msoffice/src/types","kms-msoffice/ui-msoffice/src/contexts","kms-msoffice/ui-msoffice/src/components","kms-msoffice/ui-msoffice/src/components/auth","kms-msoffice/ui-msoffice/src/components/layout"]}},"metrics":{"complianceScore":80,"roi":105,"riskCount":5,"technicalDebt":100,"reusableComponents":0,"paybackPeriod":"3-6 months","timeline":"4 weeks"},"analysis":{"solutionDiscovery":{"reusableComponents":[],"recommendations":["Implement Vector Database Abstraction Layer: Direct ChromaDB dependencies found in multiple services - migration requires decoupling","Create Data Migration Strategy: Existing embeddings in ChromaDB need to be migrated to Qdrant","Refactor Embedding Pipeline for Qdrant: Qdrant uses different collection schemas and indexing than ChromaDB"]},"architecturalAlignment":{"complianceScore":80,"violations":[],"ambiguities":["Qdrant: Needs further investigation","qdrant: Needs further investigation"]},"dataIntegration":{"integrationPoints":[{"system":"API service (20 endpoints)","method":"REST API"}],"dataFlows":[]},"operationalOwnership":{"proposedOwner":"Platform Team","supportModel":"Traditional Ops","slaTargets":{"availability":"99.9%","responseTime":"<200ms","errorRate":"<1%"}},"technicalDebt":{"currentDebt":[],"debtMetrics":{"totalDebtHours":100,"debtRatio":0.15}},"businessValue":{"roi":{"expected":"105%","paybackPeriod":"3-6 months"},"benefits":["Direct ChromaDB dependencies found in multiple services - migration requires decoupling","Existing embeddings in ChromaDB need to be migrated to Qdrant","Qdrant uses different collection schemas and indexing than ChromaDB"]},"scalability":{"bottlenecks":[],"evolutionPlan":[{"phase":1,"description":"Implement Vector Database Abstraction Layer","effort":"M"},{"phase":2,"description":"Create Data Migration Strategy","effort":"M"},{"phase":3,"description":"Refactor Embedding Pipeline for Qdrant","effort":"L"}]},"actualArchitecture":{"stack":{"languages":{".md":32,".py":138,".j2":7,".yaml":1,".bak":1,".bin":8,".txt":2,".csv":14,".json":16,".sh":16,".pkl":1,".js":4,".html":1,".svg":2,".css":2,".tsx":31,".ts":4,".mjs":1},"frameworks":[],"buildTools":[],"projectTypes":[],"dataStores":[],"infrastructure":[],"apis":[],"evidence":[]},"topology":{"serviceBoundaries":["API service (20 endpoints)"],"gateways":[],"authentication":"OAuth","caching":[],"queues":[],"workers":[],"patterns":[],"evidence":[{"file":"detected from API analysis","lines":"20 endpoints found"}]},"quality":{"testPyramid":{"unit":12,"integration":0,"e2e":0,"coverage":"unknown"},"cicd":{"present":false,"platform":null,"evidence":[]},"observability":{"logging":false,"metrics":false,"tracing":false,"evidence":[]},"security":{"secretManagement":false,"dependencyScanning":false,"authentication":true,"evidence":[]},"performance":{"caching":false,"rateLimiting":false,"concurrency":false,"evidence":[]}},"evidence":[]},"actualImpact":{"direct":[{"component":"Chromadb","changeType":"schema","effort":"S","risk":"low","evidence":[{"file":"kms-msoffice/ops-msoffice/app/services/chromadb_service.py","lines":"1-*"}]},{"component":"Chroma","changeType":"schema","effort":"S","risk":"low","evidence":[{"file":"kms-msoffice/ops-msoffice/app/services/chromadb_service.py","lines":"1-*"}]},{"component":"Qdrant","changeType":"schema","effort":"S","risk":"low","evidence":[]},{"component":"chromadb","changeType":"schema","effort":"S","risk":"low","evidence":[{"file":"kms-msoffice/ops-msoffice/app/services/chromadb_service.py","lines":"1-*"}]},{"component":"qdrant","changeType":"schema","effort":"S","risk":"low","evidence":[]}],"dependencies":[],"summary":{"totalEffort":"S","highestRisk":1,"componentsAffected":5,"testScope":["Data migration tests"]}},"actualRecommendations":[{"id":"arch-vdb-1","category":"Architecture & Modularity","title":"Implement Vector Database Abstraction Layer","why":"Direct ChromaDB dependencies found in multiple services - migration requires decoupling","how":"Create VectorStore interface with ChromaDB and Qdrant implementations","effort":"M","risk":"low","impact":5,"confidence":5,"priority":21,"owners":["Backend Team"],"guards":["Integration tests","Performance benchmarks"],"evidence":[{"file":"backend/services/","lines":"*"}]},{"id":"arch-vdb-3","category":"Architecture & Modularity","title":"Create Data Migration Strategy","why":"Existing embeddings in ChromaDB need to be migrated to Qdrant","how":"Build ETL pipeline to export from ChromaDB and import to Qdrant with validation","effort":"M","risk":"high","impact":5,"confidence":5,"priority":17,"owners":["Data Team"],"guards":["Data integrity checks","Rollback plan"],"evidence":[{"file":"migration/","lines":"*"}]},{"id":"arch-vdb-2","category":"Architecture & Modularity","title":"Refactor Embedding Pipeline for Qdrant","why":"Qdrant uses different collection schemas and indexing than ChromaDB","how":"Update embedding generation, collection creation, and metadata handling","effort":"L","risk":"medium","impact":5,"confidence":4,"priority":12,"owners":["ML Team","Backend Team"],"guards":["Data validation","Similarity tests"],"evidence":[{"file":"backend/ingest/","lines":"*"}]}]},"artifacts":{"sprint0Review":"# Enterprise Architecture Assessment Report\n\n## Executive Summary\nAnalysis completed for: Migrate vector database from ChromaDB to Qdrant for ServiceNow RAG system\n\n**Key Findings:**\n- Stack: .md, .py, .j2, .yaml, .bak, .bin, .txt, .csv, .json, .sh, .pkl, .js, .html, .svg, .css, .tsx, .ts, .mjs\n- Frameworks: \n- Project Types: \n- Components Affected: 5\n- Total Effort: S\n- Highest Risk: 1\n\n## As-Is Architecture\n\n### Technology Stack\n\n- **Languages**: .md (32 lines), .py (138 lines), .j2 (7 lines), .yaml (1 lines), .bak (1 lines), .bin (8 lines), .txt (2 lines), .csv (14 lines), .json (16 lines), .sh (16 lines), .pkl (1 lines), .js (4 lines), .html (1 lines), .svg (2 lines), .css (2 lines), .tsx (31 lines), .ts (4 lines), .mjs (1 lines)\n- **Frameworks**: None detected\n- **Build Tools**: None detected\n- **Data Stores**: None detected\n- **Infrastructure**: None detected\n- **API Types**: None detected\n\n\n### Topology\n\n- **Service Boundaries**: API service (20 endpoints)\n- **Authentication**: OAuth\n- **Caching**: None\n- **Message Queues**: None\n- **Patterns**: None detected\n\n\n### Quality Posture\n\n### Testing\n- **Unit Tests**: 12 files\n- **Coverage**: unknown\n\n### CI/CD\n- **Present**: No\n- **Platform**: None\n\n### Observability\n- **Logging**: No\n- **Metrics**: No\n- **Tracing**: No\n\n### Security\n- **Authentication**: Yes\n- **Secret Management**: No\n\n\n## Impact Analysis\n\n### Direct Impacts\n\n- **Chromadb**\n  - Change Type: schema\n  - Effort: S\n  - Risk: low\n  - Evidence: kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-*\n\n\n- **Chroma**\n  - Change Type: schema\n  - Effort: S\n  - Risk: low\n  - Evidence: kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-*\n\n\n- **Qdrant**\n  - Change Type: schema\n  - Effort: S\n  - Risk: low\n  - Evidence: \n\n\n- **chromadb**\n  - Change Type: schema\n  - Effort: S\n  - Risk: low\n  - Evidence: kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-*\n\n\n- **qdrant**\n  - Change Type: schema\n  - Effort: S\n  - Risk: low\n  - Evidence: \n\n\n## Recommendations\n\n\n### Implement Vector Database Abstraction Layer\n- **Category**: Architecture & Modularity\n- **Why**: Direct ChromaDB dependencies found in multiple services - migration requires decoupling\n- **How**: Create VectorStore interface with ChromaDB and Qdrant implementations\n- **Priority Score**: 21\n- **Effort**: M\n- **Risk**: low\n- **Evidence**: backend/services/:*\n\n\n### Create Data Migration Strategy\n- **Category**: Architecture & Modularity\n- **Why**: Existing embeddings in ChromaDB need to be migrated to Qdrant\n- **How**: Build ETL pipeline to export from ChromaDB and import to Qdrant with validation\n- **Priority Score**: 17\n- **Effort**: M\n- **Risk**: high\n- **Evidence**: migration/:*\n\n\n### Refactor Embedding Pipeline for Qdrant\n- **Category**: Architecture & Modularity\n- **Why**: Qdrant uses different collection schemas and indexing than ChromaDB\n- **How**: Update embedding generation, collection creation, and metadata handling\n- **Priority Score**: 12\n- **Effort**: L\n- **Risk**: medium\n- **Evidence**: backend/ingest/:*\n\n\n## Evidence Table\n\n| Claim | Evidence | File:Lines |\n|-------|----------|------------|\n| Chromadb impact | Component analysis | kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-* |\n| Chroma impact | Component analysis | kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-* |\n| chromadb impact | Component analysis | kms-msoffice/ops-msoffice/app/services/chromadb_service.py:1-* |\n| Implement Vector Database Abstraction Layer | Recommendation analysis | backend/services/:* |\n| Create Data Migration Strategy | Recommendation analysis | migration/:* |\n| Refactor Embedding Pipeline for Qdrant | Recommendation analysis | backend/ingest/:* |\n","executiveSummary":"\nAnalysis completed for: Migrate vector database from ChromaDB to Qdrant for ServiceNow RAG system\n\n**Key Findings:**\n- Stack: .md, .py, .j2, .yaml, .bak, .bin, .txt, .csv, .json, .sh, .pkl, .js, .html, .svg, .css, .tsx, .ts, .mjs\n- Frameworks: \n- Project Types: \n- Components Affected: 5\n- Total Effort: S\n- Highest Risk: 1\n\n","technicalArchitecture":"\ngraph TB\n    subgraph \"System Context\"\n        User[User]\n        System[System<br/>]\n        \n    end\n    \n    User --> System\n    \n    \n    style System fill:#f9f,stroke:#333,stroke-width:4px\n","riskMatrix":"# Risk Matrix\n\n| Component | Risk Level | Impact | Mitigation |\n|-----------|------------|---------|------------|\n| Chromadb | low | schema | Monitor and test thoroughly |\n| Chroma | low | schema | Monitor and test thoroughly |\n| Qdrant | low | schema | Monitor and test thoroughly |\n| chromadb | low | schema | Monitor and test thoroughly |\n| qdrant | low | schema | Monitor and test thoroughly |\n\n**Summary**: 5 components affected with low overall risk.","implementationRoadmap":"# Implementation Roadmap\n\n\n## Phase 1: Foundation\n- **Implement Vector Database Abstraction Layer** (M effort, low risk)\n  - Direct ChromaDB dependencies found in multiple services - migration requires decoupling\n  - Priority Score: 21\n- **Create Data Migration Strategy** (M effort, high risk)\n  - Existing embeddings in ChromaDB need to be migrated to Qdrant\n  - Priority Score: 17\n- **Refactor Embedding Pipeline for Qdrant** (L effort, medium risk)\n  - Qdrant uses different collection schemas and indexing than ChromaDB\n  - Priority Score: 12\n\n\n## Phase 2: Core Implementation\n\n\n\n## Phase 3: Optimization\n\n\n","adr":"# ADR-001: Migrate vector database from ChromaDB to Qdrant for ServiceNow RAG system\n\n**Date**: 2025-09-11\n**Status**: Proposed\n\n## Context\nMigrate vector database from ChromaDB to Qdrant for ServiceNow RAG system\n\n## Decision\nBased on the analysis, we recommend:\n- Implement Vector Database Abstraction Layer: Direct ChromaDB dependencies found in multiple services - migration requires decoupling\n- Create Data Migration Strategy: Existing embeddings in ChromaDB need to be migrated to Qdrant\n- Refactor Embedding Pipeline for Qdrant: Qdrant uses different collection schemas and indexing than ChromaDB\n\n## Consequences\n\n### Positive\n- Improved architecture alignment\n- Better maintainability\n- Enhanced performance\n\n### Negative\n- Implementation effort required\n- Potential temporary disruption\n- Learning curve for new patterns\n\n### Risks\n- Implement Vector Database Abstraction Layer: low risk\n- Create Data Migration Strategy: high risk\n- Refactor Embedding Pipeline for Qdrant: medium risk\n"},"diagrams":{"systemContext":"\ngraph TB\n    subgraph \"System Context\"\n        User[User]\n        System[System<br/>]\n        \n    end\n    \n    User --> System\n    \n    \n    style System fill:#f9f,stroke:#333,stroke-width:4px\n","components":"\ngraph LR\n    subgraph \"Component View\"\n        Chromadb[Chromadb<br/>Impact: schema]\n        Chroma[Chroma<br/>Impact: schema]\n        Qdrant[Qdrant<br/>Impact: schema]\n        chromadb[chromadb<br/>Impact: schema]\n        qdrant[qdrant<br/>Impact: schema]\n    end\n    \n    \n    \n    style Chromadb fill:#9f9,stroke:#333,stroke-width:2px\n    style Chroma fill:#9f9,stroke:#333,stroke-width:2px\n    style Qdrant fill:#9f9,stroke:#333,stroke-width:2px\n    style chromadb fill:#9f9,stroke:#333,stroke-width:2px\n    style qdrant fill:#9f9,stroke:#333,stroke-width:2px\n","systemArchitecture":"\ngraph TB\n    subgraph \"Presentation Layer\"\n        WEB[Web Application]\n        MOB[Mobile Apps]\n        API[REST APIs]\n    end\n    subgraph \"Application Layer\"\n        GW[API Gateway]\n        AUTH[Auth Service]\n        BUS[Business Logic]\n    end\n    subgraph \"Data Layer\"\n        DB[(Primary Database)]\n        CACHE[(Redis Cache)]\n        QUEUE[(Message Queue)]\n    end\n    WEB --> GW\n    MOB --> GW\n    API --> GW\n    GW --> AUTH\n    GW --> BUS\n    BUS --> DB\n    BUS --> CACHE\n    BUS --> QUEUE","dataFlow":"\nsequenceDiagram\n    participant User\n    participant Frontend\n    participant Gateway\n    participant Service\n    participant Database\n    \n    User->>Frontend: Submit Request\n    Frontend->>Gateway: API Call\n    Gateway->>Service: Process Request\n    Service->>Database: Query Data\n    Database-->>Service: Return Data\n    Service-->>Gateway: Process Response\n    Gateway-->>Frontend: JSON Response\n    Frontend-->>User: Display Result","deploymentTopology":"\ngraph TB\n    subgraph \"Production Environment\"\n        subgraph \"Web Tier\"\n            LB[Load Balancer]\n            WEB1[Web Server 1]\n            WEB2[Web Server 2]\n        end\n        subgraph \"App Tier\"\n            APP1[App Server 1]\n            APP2[App Server 2]\n        end\n        subgraph \"Data Tier\"\n            DB_MASTER[(Master DB)]\n            DB_SLAVE[(Replica DB)]\n        end\n    end\n    LB --> WEB1\n    LB --> WEB2\n    WEB1 --> APP1\n    WEB2 --> APP2\n    APP1 --> DB_MASTER\n    APP2 --> DB_SLAVE","componentDiagram":"\ngraph LR\n    subgraph \"Frontend\"\n        UI[UI Components]\n        STATE[State Management]\n        API_CLIENT[API Client]\n    end\n    subgraph \"Backend\"\n        CONTROLLER[Controllers]\n        SERVICE[Services]\n        REPO[Repositories]\n    end\n    subgraph \"Infrastructure\"\n        DB[(Database)]\n        CACHE[(Cache)]\n        QUEUE[(Queue)]\n    end\n    UI --> STATE\n    STATE --> API_CLIENT\n    API_CLIENT --> CONTROLLER\n    CONTROLLER --> SERVICE\n    SERVICE --> REPO\n    REPO --> DB\n    SERVICE --> CACHE\n    SERVICE --> QUEUE"}}